import type { WriteOptions } from 'atomically/dist/types';
import type { Callback, Disposer, Encoding, ProviderFileOptions } from '../types';
import ProviderAbstractFile from './abstract_file';
declare class ProviderFile<Options extends ProviderFileOptions = ProviderFileOptions> extends ProviderAbstractFile<Options> {
    fileRead(filePath: string, encoding: Encoding): Promise<string>;
    fileReadSync(filePath: string, encoding: Encoding): string;
    fileWrite(filePath: string, data: string, options?: WriteOptions): Promise<void>;
    fileWriteSync(filePath: string, data: string, options?: WriteOptions): void;
    fileWatch(filePath: string, callback: Callback): Disposer;
}
export default ProviderFile;
