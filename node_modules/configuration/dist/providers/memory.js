/* IMPORT */
import Lang from '../utils/lang.js';
import PathProp from '../utils/pp.js';
import ProviderAbstract from './abstract.js';
/* MAIN */
class ProviderMemory extends ProviderAbstract {
    /* PUBLIC API */
    async read() {
        return this.readSync();
    }
    readSync() {
        const data = this.data ?? Lang.cloneDeep(this.defaults);
        const dataRaw = this.dataRaw ?? this.defaultsRaw;
        return { data, dataRaw };
    }
    async write(data, force = false) {
        return this.writeSync(data, force);
    }
    writeSync(data, force = false) {
        if (!force && this.isEqual(data))
            return;
        if (Lang.isString(data)) {
            this.data = PathProp.unflat(this.dataParser.parse(data) ?? this.defaults);
            this.dataRaw = data;
            this.dataFiltered = this.filter(this.data);
        }
        else {
            this.data = PathProp.unflat(data);
            this.dataRaw = this.dataParser.stringify(data, this.dataRaw) ?? this.defaultsRaw;
            this.dataFiltered = this.filter(this.data);
        }
        this.trigger();
    }
}
/* EXPORT */
export default ProviderMemory;
